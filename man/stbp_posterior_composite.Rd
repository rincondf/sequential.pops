% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/STBP.R
\name{stbp_posterior_composite}
\alias{stbp_posterior_composite}
\title{Posterior probability calculation for composite hypotheses}
\usage{
stbp_posterior_composite(
  data,
  hypothesis,
  likelihood_func,
  prior,
  lower_bnd = 0,
  upper_bnd = Inf
)
}
\arguments{
\item{data}{Vector with count data for a single sampling bout.}

\item{hypothesis}{Single value with the hypothesized value of \eqn{\mu}.}

\item{likelihood_func}{Kernel probability density function for the data. See details.}

\item{prior}{Single number with initial prior. Must be in the interval \eqn{[0,1]}}

\item{lower_bnd}{Single number indicating the lowest possible value for \eqn{\mu}. Most cases is \eqn{0}.}

\item{upper_bnd}{Single number indicating the greatest possible value for \eqn{\mu}. Most cases is \code{Inf}.}
}
\value{
A single probability value
}
\description{
This function calculates a posterior probability for hypotheses about population densities of the form \eqn{H:\mu > \psi}, given the data at a single
iteration. This function is to be used in a sequential framework, and called on the sequential test \code{\link{stbp_composite}}.
}
\details{
The \code{likelihood_func} argument should be specified as a density function with an \dQuote{x} in the
 mean argument and \dQuote{data} in the vector of quantiles.
 For example, \code{function(data, x){dpois(data, lambda = x)}}.
}
\examples{

# Counts collected in a single sampling bout
counts <- c(1, 2, 3)

# Calculate posterior probability from a naive 0.5 prior for H1:mu>2
# (a population being >2 individuals per sampling unit) with
# a poisson kernel

stbp_posterior_composite(data = counts,
                          hypothesis = 2,
                          likelihood_func = function(data, x)
                                                {dpois(data, lambda = x)},
                          prior = 0.5,
                          lower_bnd = 0,
                          upper_bnd = Inf) # returns 0.60630278

# Same analysis but with a negative binomial kernel.
# Note that 'size' can either be a positive number or a function.

stbp_posterior_composite(data = counts,
                          hypothesis = 2,
                          likelihood_func = function(data, x)
                                                {dnbinom(data, size = 2,
                                                         mu = x)},
                          prior = 0.5,
                          lower_bnd = 0,
                          upper_bnd = Inf) # returns 0.72558593
}
